<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.EvaluateMapper">
  <resultMap id="BaseResultMap" type="com.model.Evaluate">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="from_id" jdbcType="INTEGER" property="fromId" />
    <result column="to_id" jdbcType="INTEGER" property="toId" />
    <result column="evaluate_msg" jdbcType="VARCHAR" property="evaluateMsg" />
    <result column="evaluate_ids" jdbcType="VARCHAR" property="evaluateIds" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, from_id, to_id, evaluate_msg, evaluate_ids, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_evaluate
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_evaluate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.model.Evaluate">
    insert into t_evaluate (id, from_id, to_id, 
      evaluate_msg, evaluate_ids, remark
      )
    values (#{id,jdbcType=INTEGER}, #{fromId,jdbcType=INTEGER}, #{toId,jdbcType=INTEGER}, 
      #{evaluateMsg,jdbcType=VARCHAR}, #{evaluateIds,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.model.Evaluate">
    insert into t_evaluate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fromId != null">
        from_id,
      </if>
      <if test="toId != null">
        to_id,
      </if>
      <if test="evaluateMsg != null">
        evaluate_msg,
      </if>
      <if test="evaluateIds != null">
        evaluate_ids,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fromId != null">
        #{fromId,jdbcType=INTEGER},
      </if>
      <if test="toId != null">
        #{toId,jdbcType=INTEGER},
      </if>
      <if test="evaluateMsg != null">
        #{evaluateMsg,jdbcType=VARCHAR},
      </if>
      <if test="evaluateIds != null">
        #{evaluateIds,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.Evaluate">
    update t_evaluate
    <set>
      <if test="fromId != null">
        from_id = #{fromId,jdbcType=INTEGER},
      </if>
      <if test="toId != null">
        to_id = #{toId,jdbcType=INTEGER},
      </if>
      <if test="evaluateMsg != null">
        evaluate_msg = #{evaluateMsg,jdbcType=VARCHAR},
      </if>
      <if test="evaluateIds != null">
        evaluate_ids = #{evaluateIds,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.Evaluate">
    update t_evaluate
    set from_id = #{fromId,jdbcType=INTEGER},
      to_id = #{toId,jdbcType=INTEGER},
      evaluate_msg = #{evaluateMsg,jdbcType=VARCHAR},
      evaluate_ids = #{evaluateIds,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>