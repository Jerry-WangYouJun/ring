<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.InviteMapper">
  <resultMap id="BaseResultMap" type="com.model.Invite">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="from_id" jdbcType="INTEGER" property="fromId" />
    <result column="join_id" jdbcType="INTEGER" property="joinId" />
    <result column="point_id" jdbcType="INTEGER" property="pointId" />
    <result column="invite_date" jdbcType="TIMESTAMP" property="inviteDate" />
    <result column="invite_states" jdbcType="VARCHAR" property="inviteStates" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, from_id, join_id, point_id, invite_date, invite_states, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_invite
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_invite
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.model.Invite">
    insert into t_invite (id, from_id, join_id, 
      point_id, invite_date, invite_states, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{fromId,jdbcType=INTEGER}, #{joinId,jdbcType=INTEGER}, 
      #{pointId,jdbcType=INTEGER}, #{inviteDate,jdbcType=TIMESTAMP}, #{inviteStates,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.model.Invite">
    insert into t_invite
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fromId != null">
        from_id,
      </if>
      <if test="joinId != null">
        join_id,
      </if>
      <if test="pointId != null">
        point_id,
      </if>
      <if test="inviteDate != null">
        invite_date,
      </if>
      <if test="inviteStates != null">
        invite_states,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fromId != null">
        #{fromId,jdbcType=INTEGER},
      </if>
      <if test="joinId != null">
        #{joinId,jdbcType=INTEGER},
      </if>
      <if test="pointId != null">
        #{pointId,jdbcType=INTEGER},
      </if>
      <if test="inviteDate != null">
        #{inviteDate,jdbcType=TIMESTAMP},
      </if>
      <if test="inviteStates != null">
        #{inviteStates,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.Invite">
    update t_invite
    <set>
      <if test="fromId != null">
        from_id = #{fromId,jdbcType=INTEGER},
      </if>
      <if test="joinId != null">
        join_id = #{joinId,jdbcType=INTEGER},
      </if>
      <if test="pointId != null">
        point_id = #{pointId,jdbcType=INTEGER},
      </if>
      <if test="inviteDate != null">
        invite_date = #{inviteDate,jdbcType=TIMESTAMP},
      </if>
      <if test="inviteStates != null">
        invite_states = #{inviteStates,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.Invite">
    update t_invite
    set from_id = #{fromId,jdbcType=INTEGER},
      join_id = #{joinId,jdbcType=INTEGER},
      point_id = #{pointId,jdbcType=INTEGER},
      invite_date = #{inviteDate,jdbcType=TIMESTAMP},
      invite_states = #{inviteStates,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>