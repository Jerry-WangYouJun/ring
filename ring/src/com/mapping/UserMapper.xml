<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.model.User" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="user_no" property="userNo" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
     <result column="pwd" property="pwd" jdbcType="VARCHAR" />
     <result column="role" property="role" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap><sql id="Base_Column_List">
    id, user_no, pwd , user_name, role, remark
  </sql>
  <select id="queryByWhere" resultMap="BaseResultMap" >
  	    select * from t_user where 1=1 
  	    <if test="obj.id!=null and obj.id > 0">
  	    	    and id = #{obj.id}
  	    </if>
  	    <if test="obj.userNo !=null and obj.userNo != '' ">
  	    	 	and  user_no like #{obj.userNo}
  	    </if>
  	    <if test="obj.userName!= null and obj.userName != '' ">
  	    	     and user_name like #{obj.userName}
  	    </if>
  	     limit  #{page.start}, #{page.pageSize} 
  </select>
  
  <select id="queryTotal"  resultType="java.lang.Integer">
  	    select count(*) from t_user where 1=1 
  	    <if test="id!=null and id > 0">
  	    	    and id = #{id}
  	    </if>
  	    <if test="userNo !=null and userNo != '' ">
  	    	 	and  user_no like #{userNo}
  	    </if>
  	    <if test="userName!= null and userName != '' ">
  	    	     and user_name like #{userName}
  	    </if>
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.model.User">
    insert into t_user ( user_no, user_name, pwd , 
      role, remark)
    values ( #{userNo,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, 
      #{role,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertSelective" parameterType="com.model.User">
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userNo != null">
        user_no,
      </if>
      <if test="userName != null">
        user_name,
      </if>
       <if test="pwd != null">
        pwd,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userNo != null">
        #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
       <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.User">
    update t_user
    <set>
      <if test="userNo != null">
        user_no = #{userNo,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.User">
    update t_user
    set user_no = #{userNo,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>